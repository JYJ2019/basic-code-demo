面向对象的三大特征:封装性,继承性,多态性.
继承是多态的前提,如果没有继承,就没有多态.

继承主要解决的问题就是:共性抽取.

继承关系当中的特点:
1.子类可以拥有父类的"内容"
2.子类还可以拥有自己专有的内容.

继承当中的父类:也可以叫基类,超类.
继承当中的子类:也可以叫派生类.

========================================================================================================================
Java语言是[单继承的].
一个类的直接父类只能有唯一一个.
class A {}
class B extends A {}//正确
class C {}
class D extends A, C{}//错误

Java语言可以[多级继承].
我有一个父亲,我父亲还有一个父亲,也就是爷爷.
(java.lang.Object 为祖宗类,是金字塔的顶端)
class A {}
class B extends A {}//正确
class C extends B {}//正确

一个子类的直接父类是唯一的,但是一个父类可以有很多个子类.
可以有很多个兄弟姐妹,生二胎.
class A {}
class B extends A {}//正确
class C extends A {}//正确

========================================================================================================================
子类就是一个父类,所以是继承关系.
如果父类当中的方法不确定如何进行{}方法体实现,那么这就应该是一个[抽象方法].

========================================================================================================================
[发红包]的逻辑,三要素:
返回值类型: ArrayList<Integer>
方法名称: send
参数列表: 1.总共发多少钱 int totalMoney
         2.分成多少份   int count
public ArrayList<Integer> send(int totalMoney, int count) {
    //...
}

[收红包]的逻辑,三要素:
返回值类型: void
方法名称: receive
参数列表: ArrayList<Integer>
public void receive(ArrayList<Integer> list) {
    //...
}

